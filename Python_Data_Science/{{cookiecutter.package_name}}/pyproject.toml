[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_description}}"
authors = [
    "{{cookiecutter.author_name}} <{{cookiecutter.email}}>",
]
readme = "README.md"
license = "MIT"
classifiers = [
    "{{cookiecutter.development_status}}",
]

[tool.poetry.dependencies]
python = "{{cookiecutter.compatible_python_versions}}"
hydra-core = "^1.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-xdist = "^2.5.0"
pytest-cov = "^4.0.0"
pre-commit = "^2.17.0"
pdoc = "^7.1.1"
black = "^22.6.0"
isort = "^5.10.1"
readme-coverage-badger = ">=0.1.2,<1.0.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    '--verbose',
    '--durations=10',
    '--color=yes',
    '-s',
    '-vv',
    '--doctest-modules',
    '--cov=src/{{cookiecutter.package_name}}',
    '-n 2',
]
xfail_strict = true
filterwarnings = ["ignore"]
log_cli_level = "info"
testpaths = ["tests", "src/{{cookiecutter.package_name}}"]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
